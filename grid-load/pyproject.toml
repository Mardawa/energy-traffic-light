[tool.poetry]
name = "grid-load"
version = "0.1.0"
description = ""
authors = ["The best team"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pandas = { extras = ["excel", "performance"], version = "^2.2.2" }
seaborn = "^0.13.2"
ipykernel = "^6.29.5"
scipy = "^1.14.1"
grid-load-libs = {path = "grid_load", develop = true}


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88

lint.select = [
    "E",
    "F",
    "D",
    "I",
    "UP",
    "YTT",
    "FBT",
    "B",
    "A",
    "C",
    "EM",
    "ICN",
    "ISC",
    "T20",
    "PT",
    "Q",
    "RET",
    "SIM",
    "TID",
    "ARG",
    "PD",
    "PIE",
    "N",
]
lint.ignore = [
    "D100",   # D100 : Missing docstring in public module
    "D101",   # D101 : Missing docstring in public class
    "D102",   # D102 : Missing docstring in public method
    "D103",   # D103 : Missing docstring in public function
    "D104",   # D104 : Missing docstring in public package
    "D105",   # D105 : Missing docstring in magic method
    "D107",   # D107 : Missing docstring in __init__
    "F401",   # F401 : Imported but unused
    "E501",   # E501 : Line too long
    "C901",   # C901 : Function is too complex
    "RET505", # RET505 : Unnecessary `elif` after `return` statement
    "PD901",  # PD901 : `df` is a bad variable name. Be kinder to your future self.
    # "N999",   # N999: invalid-module-name 
    # "N801",   # N801: invalid-class-name
]

lint.unfixable = [
    "E712",   # E712 : Comparison to True should be 'if cond is True:' or 'if cond:'
    "F841",   # F841 : Local variable name is assigned to but never used
    "RET504", # RET504 : Unnecessary assignment to `res` before `return` statement
]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
lint.per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Using python 3.11
target-version = "py311"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google" # Accepts: "google", "numpy", or "pep257".

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
